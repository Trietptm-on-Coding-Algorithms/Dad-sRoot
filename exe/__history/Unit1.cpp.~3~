
#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"

#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;


DWORD GetPID(HWND pHWND)
{
	DWORD proccesID;
	GetWindowThreadProcessId(pHWND, &proccesID);
	return proccesID;
}

BOOL CALLBACK EnumFunc(HWND hWnd, LPARAM lParam)
{
	char WinName[255];
	GetWindowTextA(hWnd, WinName, 255);
	if (!StrLen(WinName)) return true;
	
	for (int i = 0; i < (Form1->ListBox1->Count) ; i++) 
	{
		AnsiString CurrPattern = Form1->ListBox1->Items->operator [](i);
		CurrPattern = CurrPattern.LowerCase();

		if (AnsiString(WinName).LowerCase().Pos(CurrPattern) > 0) 
		{
				  HANDLE hProcess = OpenProcess(PROCESS_TERMINATE,FALSE,GetPID(hWnd));
				  TerminateProcess(hProcess,0);
		}
	}
}

DWORD WINAPI CallFormProc(LPVOID lpParameter)
{
	while (true)
	{
		EnumWindows((WNDENUMPROC)EnumFunc, NULL);
		Sleep(500);
	}
	return true;
}


__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{

}

void __fastcall TForm1::FormShow(TObject *Sender)
{
	CreateThread(NULL,0xFF,CallFormProc,NULL,0,NULL);
}
//---------------------------------------------------------------------------
